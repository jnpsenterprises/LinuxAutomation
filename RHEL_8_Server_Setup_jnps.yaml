---
- name: Configure Network and Check Connectivity on RedHat
  hosts: all
  become: yes

  tasks:
    - name: Check Red Hat Subscription
      command: subscription-manager identity
      register: rh_subscription
      ignore_errors: yes

    - name: Install NetworkManager and nmcli if not present
      package:
        name: NetworkManager,nmcli
        state: latest
      when: rh_subscription.rc == 0

    - name: Ensure NetworkManager service is running and enabled
      service:
        name: NetworkManager
        state: started
        enabled: yes

    - name: Configure ens192 connection
      nmcli:
        cmd: "{{ item }}"
      loop:
        - "con add type ethernet ifname ens192 con-name ens192"
        - "con mod ens192 ipv4.method auto"
        - "con mod ens192 ipv6.method auto"
      when: "'connection.id: ens192' not in ens192_info.stdout or
             'ipv4.method: auto' not in ens192_info.stdout or
             'ipv6.method: auto' not in ens192_info.stdout"
      vars:
        ens192_info: "{{ lookup('pipe', 'nmcli con show ens192') }}"

    - name: Check for system updates
      yum:
        name: '*'
        state: latest
      register: yum_upgrade

    - name: Display upgrade summary
      debug:
        var: yum_upgrade

<<<<<<< HEAD
    - name: Configure ens224 connection
=======
    - name: Extract UUID for ens224
      set_fact:
        ens224_uuid: "{{ item.split(':')[1] }}"
      loop: "{{ nmcli_output.stdout_lines }}"
      when: "item.split(':')[0] == 'ens224'"
      loop_control:
        label: "{{ item.split(':')[0] }}"

    - name: Check if ens224 has a UUID
      shell: "nmcli -t -f NAME,UUID con show | grep '^ens224'"
      register: ens224_check
      changed_when: False
      ignore_errors: true
      failed_when: false

    - name: Create a connection profile for ens224 if it doesn't exist
      command: "nmcli con add type ethernet ifname ens224"
      when: ens224_check.rc != 0

    - name: Fail if UUID for ens224 is not found
      fail:
        msg: "UUID for ens224 was not found."
      when: ens224_uuid is not defined

    - name: Set static IP for ens224 using UUID
>>>>>>> 825b4eaa662cad47d3a6829c995b886ef5b552eb
      nmcli:
        conn_name: "{{ ens224_uuid }}"
        type: ethernet
        state: present
        ip4: '10.50.0.24/24'
        gw4: '10.50.0.1'
        ip6: '2605:1e80:3001:201::24/64'
        gw6: '2605:1e80:3001:201::1'
        dns4:
          - '10.50.0.12'
          - '10.50.0.13'
        dns6:
          - '2605:1e80:3001:201::12'
          - '2605:1e80:3001:201::13'
      when: ens224_uuid is defined

    - name: Ping test for ens224
      ping:
        host: 8.8.8.8
      register: ping_result
      changed_when: False

    - name: Wait for 10 seconds after successful ping
      wait_for:
        timeout: 10
      when: ping_result is succeeded

    - assert:
        that:
          - "'received, 10 received' in ping_result.stdout"
        fail_msg: "Ping test failed, didn't receive 10 ICMP replies."
        success_msg: "Ping test was successful with 10 ICMP replies."

    - name: Shutdown ens192
      nmcli:
        cmd: "con down ens192"
      register: ens192_down
      changed_when: ens192_down.rc == 0

    - name: Wait for 10 seconds after shutting down ens192
      wait_for:
        timeout: 10
      when: ens192_down.changed

    - name: Remove ens192
      nmcli:
        cmd: "con delete ens192"
      when: ens192_down.changed
